@model IEnumerable<NewProductDetailViewModel>


<div class="row">
    <div class="col-md-12">
        <form id="formDetailCreate">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @foreach (var item in Model)
            {
                <div class="form-group">
                    <label class="control-label">@item.CtgPropertyName</label>
                    <input id="@item.CtgPropertyId" value="@item.PropertyValue" type="text" class="form-control property-value" />
                    
                </div>
            }

        </form>
    </div>
</div>


<script type="text/javascript">
    function submitDetail() {
        var ProductDetailList = [];

        $(".property-value").each(function () {

            ProductDetailList.push({
                Id: $(this).attr("id"),
                Value: $(this).val()
            });
        });
        console.log(ProductDetailList);
        $.ajax({
            type: 'POST',
            url: '/Product/CreateDetail',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
            data: { productDetailViewModels: ProductDetailList },

            success: function (result) {
                //window.location.href="/Product/"
                console.log(result);
            },
            error: function () {
                //alert('Failed to receive the Data');
                console.log('Failed ');
            }


        })


    }

</script>